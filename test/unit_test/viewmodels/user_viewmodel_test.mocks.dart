// Mocks generated by Mockito 5.1.0 from annotations
// in convert_me/test/viewmodels/user_viewmodel_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:convert_me/models/currency.dart' as _i7;
import 'package:convert_me/models/user.dart' as _i4;
import 'package:convert_me/services/auth_service.dart' as _i3;
import 'package:convert_me/services/forex_api_service.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeSharedPreferences_0 extends _i1.Fake
    implements _i2.SharedPreferences {}

class _FakeUri_1 extends _i1.Fake implements Uri {}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i3.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SharedPreferences get sharedPreferencesInstance =>
      (super.noSuchMethod(Invocation.getter(#sharedPreferencesInstance),
          returnValue: _FakeSharedPreferences_0()) as _i2.SharedPreferences);
  @override
  set sharedPreferencesInstance(
          _i2.SharedPreferences? _sharedPreferencesInstance) =>
      super.noSuchMethod(
          Invocation.setter(
              #sharedPreferencesInstance, _sharedPreferencesInstance),
          returnValueForMissingStub: null);
  @override
  set user(_i4.User? _user) =>
      super.noSuchMethod(Invocation.setter(#user, _user),
          returnValueForMissingStub: null);
  @override
  bool get loggedIn =>
      (super.noSuchMethod(Invocation.getter(#loggedIn), returnValue: false)
          as bool);
  @override
  set loggedIn(bool? _loggedIn) =>
      super.noSuchMethod(Invocation.setter(#loggedIn, _loggedIn),
          returnValueForMissingStub: null);
  @override
  _i5.Future<bool> signup(String? username, String? from, String? to) =>
      (super.noSuchMethod(Invocation.method(#signup, [username, from, to]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<bool> update(_i4.User? user) =>
      (super.noSuchMethod(Invocation.method(#update, [user]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}

/// A class which mocks [ForexApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockForexApiService extends _i1.Mock implements _i6.ForexApiService {
  MockForexApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Uri getUri(String? route, {String? queryString}) => (super.noSuchMethod(
      Invocation.method(#getUri, [route], {#queryString: queryString}),
      returnValue: _FakeUri_1()) as Uri);
  @override
  _i5.Future<List<_i7.Currency>> getCurrencies() =>
      (super.noSuchMethod(Invocation.method(#getCurrencies, []),
              returnValue: Future<List<_i7.Currency>>.value(<_i7.Currency>[]))
          as _i5.Future<List<_i7.Currency>>);
  @override
  _i5.Future<double?> getCurrencyValue(String? from, String? to) =>
      (super.noSuchMethod(Invocation.method(#getCurrencyValue, [from, to]),
          returnValue: Future<double?>.value()) as _i5.Future<double?>);
}
